DELIMITERS = "<.>" "<..>" "<...>" "<!>" "<?>" "<Â¶>" sent ;
SOFT-DELIMITERS = "<,>" ;
SUBREADINGS = LTR ;

LIST BOS = (>>>) ;
LIST EOS = (<<<) ;

SETS

LIST N = n ;
LIST Np = np ;
LIST Prn = prn ;
LIST Det = det ;
LIST Adj = adj ;
LIST Adv = adv ;
LIST Pr = pr ;
LIST Num = num ;
LIST Rel = (prn rel) ;
LIST Ij = ij ;
LIST V = vblex vbser vaux vbmod vbhaver vbdo ;
LIST Vblex = vblex ;
LIST Vbser = vbser ;
LIST Vbhaver = vbhaver ;
LIST Vbdo = vbdo ;
LIST Vbaux = vaux ;
LIST Vbmod = vbmod ;
LIST Gen = gen ;
LIST Apos = apos ;
SET Inf = (vblex inf) | (vbmod inf) | (vaux inf) | (vbser inf) | (vbhaver inf) | (vbdo inf) ;

LIST Sg = sg ;
LIST Pl = pl ;
LIST Sp = sp ;
LIST M = m ;
LIST F = f ;
LIST Nt = nt ;
LIST Mf = mf ;
LIST Fin = pres past ;
SET Pers = (p1) | (p2) | (p3) ;

LIST Can = "can" ;
LIST Letters = "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z" ;

SECTION

REMOVE Fin IF (-1C Det) ;

REMOVE Pl IF (0 Letters) ;

REMOVE (vblex) IF (-1 (gen)) ;

REMOVE (preadv) IF (1 (cm)) ;

SELECT Vbmod IF (0 Can) (1 Inf) ;
# ex: will->vbmod be
SELECT ("will"i vbmod) IF (1 Inf) ;
SELECT ("will"i vbmod) IF (1 Adv) (2 Inf) ;

#Lemmas that are N or V: N if DET/ADJ/V/PR precedes it or V follows

SELECT N IF (0 N) (0 V) (-1 Pr) ;
SELECT N IF (0 N) (0 V) (-1 V) ;
SELECT N IF (0 N) (0 V) (-1 Det) ;
SELECT N IF (0 N) (0 V) (-1 Adj) ;
SELECT N IF (0 N) (0 V) (1 V) ;

#Lemmas that are N or V: V if ADV precedes it or ADV/N/PRN follows

SELECT V IF (0 N) (0 V) (-2 N) (-1 Adv) ;
SELECT V IF (0 N) (0 V) (-2 Det) (1 N) ;
SELECT V IF (0 N) (0 V) (-1 Prn) ;

#Otherwise, select N
SELECT N IF (0 N) (0 V) ;

#Lemmas that are N or ADJ: N if ADJ precedes it or V follows

SELECT N IF (0 N) (0 Adj) (-1 Adj) ;
SELECT N IF (0 N) (0 Adj) (1 V) ;

#Lemmas that are N or ADJ: ADJ if N follows it

SELECT Adj IF (0 N) (0 Adj) (1 N) ;

#(by wth)

# one : eins (num) / man (prn)
SELECT (num) IF (1 (n)) ;

REMOVE Inf IF (-1 BOS) ;
REMOVE (vblex pres) IF (-1 BOS) ;
REMOVE (vblex pp) IF (-1 BOS) ;
REMOVE (cnjadv) IF (-1 BOS) ;
REMOVE (preadv) IF (1 EOS) ;
REMOVE (vblex pp) IF (-1 (np)) ;
REMOVE (vblex pp) IF (-1 (prn subj)) ;
REMOVE (vbmod inf) IF (1 Inf) ;
REMOVE (vbmod inf) IF (1 Adv) (2 Inf) ;
REMOVE ("second"i n) IF (1 (n)) ;
#REMOVE (prn obj) IF (-1 V) (-2 BOS) ;
REMOVE (prn obj) IF (1 (vblex inf)) ;

SELECT (adv itg) IF (-1 BOS) ;
SELECT V IF (-1 (prn pers)) ;

# Saxon genitive ('s)
REMOVE Gen IF (NOT -1 N | Np) ;
REMOVE Gen IF (0 Gen) (0 Apos) (NOT -1 ("<.*s>"r)) ;
SELECT Gen IF (0 Gen) (0 Vbser) (0 Vbhaver) (-1 N + Pl) ;

